题目描述
请设计一个高效算法，再给定的字符串数组中，找到包含"Coder"的字符串(不区分大小写)，并将其作为一个新的数组返回。结果字符串的顺序按照"Coder"出现的次数递减排列，若两个串中"Coder"出现的次数相同，则保持他们在原数组中的位置关系。
给定一个字符串数组A和它的大小n，请返回结果数组。保证原数组大小小于等于300,其中每个串的长度小于等于200。同时保证一定存在包含coder的字符串。
测试样例：
["i am a coder","Coder Coder","Code"],3
返回：["Coder Coder","i am a coder"]
class Coder {
public:
    vector<string> findCoder(vector<string> A, int n) {
        // write code here
        vector<pair<string,int> > v;
        vector<string> res;
        for(auto str:A){
            int len=str.size();
            int cnt=0;
            int start=-5;
            while((start=str.find("coder",start+5))!=string::npos){
                cnt++;
            }
            if(cnt) v.push_back({str,cnt});
        }
        stable_sort(v.begin(),v.end(),[](const pair<string,int>&a,const pair<string,int>&b){return a.second>b.second;});
        for(auto p:v){
            res.push_back(p.first);
        }
        return res;
    }
};